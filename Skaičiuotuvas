from flask import Flask, request
from PIL import Image, ImageDraw, ImageFont
import os

app = Flask(__name__)

skaicius = 0

def sudetis(x, y):
    return x + y

def atimtis(x, y):
    return x - y

def daugyba(x, y):
    return x * y

def dalyba(x, y):
    if y != 0:
        return x / y
    else:
        return "Dalyba iš nulio negalima"


def generate_image(result):
    image_path = "static/result_images/kate.png"  # Pakeiskite į savo paveikslėlio kelią
    image = Image.open(image_path)

    # Sukuriamas draw objektas
    draw = ImageDraw.Draw(image)
    
    # Sukuriamas šriftas (Arial, dydis 36)
    font = ImageFont.truetype("arial.ttf", 36)
    
    # Nubraižomas tekstas juoda spalva
    draw.text((50, 20), str(result), fill=(0, 0, 0), font=font)  # Tekstas juodos spalvos
    
    # Išsaugomas paveikslėlis
    result_image_path = f"static/result_images/result.jpg"  # Pakeiskite į norimą išsaugojimo vietą
    image.save(result_image_path)
    
    return result_image_path

@app.route("/")
def hello_world():
    return """
    <form action="/skaicius">
        <label for="test">Įrašykite pirmą skaičių</label><br>
        <input type="text" id="test" name="test" value=" "><br><br>

        <label for="test2">Įrašykite antrą skaičių</label><br>
        <input type="text" id="test2" name="test2" value=" "><br><br>

        <label for="veiksmas">Palikite vieną norimo atlikti matematinio veiksmo ženklą </label><br>   
        <input type="text" id="veiksmas" name="veiksmas" value="+-*/"><br><br>   
        
        <input type="submit" value="Skaičiuoti">
    </form>
    """

@app.route("/skaicius")
def skaiciuoti():
    if not request.args.get("test") or not request.args.get("test2"):
        return "Nera argumento"

    skaicius = request.args.get("test")
    skaicius2 = request.args.get("test2")
    operacija = request.args.get("veiksmas")

    if operacija == '+':
        suma = sudetis(int(skaicius), int(skaicius2))
        result_image_path = generate_image(suma)
        return f'<img src="{result_image_path}" alt="Rezultatas">'
    elif operacija == '-':
        skirtumas = atimtis(int(skaicius), int(skaicius2))
        result_image_path = generate_image(skirtumas)
        return f'<img src="{result_image_path}" alt="Rezultatas">'
    elif operacija == '*':
        sandauga = daugyba(int(skaicius), int(skaicius2))
        result_image_path = generate_image(sandauga)
        return f'<img src="{result_image_path}" alt="Rezultatas">'
    elif operacija == '/':
        dalmuo = dalyba(int(skaicius), int(skaicius2))
        result_image_path = generate_image(dalmuo)
        return f'<img src="{result_image_path}" alt="Rezultatas">'
    else:
        return "Jūsų matematinis ženklas neatitinka reikalavimų, bandykite iš naujo"

if __name__ == "__main__":
    app.run()

